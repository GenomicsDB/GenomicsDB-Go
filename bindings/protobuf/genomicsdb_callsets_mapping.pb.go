//*
// The MIT License (MIT)
// Copyright (c) 2016-2017 Intel Corporation
// Copyright (c) dātma, inc™
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

//*
// Note: Variable names are kept aligned with
// GenomicsDB JSON configuration.
//
// To build, use protocol buffer version >3.2.0 and the following command from base directory:
// $ protoc -Isrc/resources/ --java_out=src/main/java/ \
//     src/resources/genomicsdb_callsets_mapping.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.7
// source: genomicsdb_callsets_mapping.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SampleIDToTileDBIDMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SampleName *string `protobuf:"bytes,1,req,name=sample_name,json=sampleName" json:"sample_name,omitempty"`
	RowIdx     *int64  `protobuf:"varint,2,req,name=row_idx,json=rowIdx" json:"row_idx,omitempty"`
	IdxInFile  *int64  `protobuf:"varint,3,req,name=idx_in_file,json=idxInFile" json:"idx_in_file,omitempty"`
	// Types that are assignable to Source:
	//
	//	*SampleIDToTileDBIDMap_StreamName
	//	*SampleIDToTileDBIDMap_Filename
	Source isSampleIDToTileDBIDMap_Source `protobuf_oneof:"source"`
}

func (x *SampleIDToTileDBIDMap) Reset() {
	*x = SampleIDToTileDBIDMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genomicsdb_callsets_mapping_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleIDToTileDBIDMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleIDToTileDBIDMap) ProtoMessage() {}

func (x *SampleIDToTileDBIDMap) ProtoReflect() protoreflect.Message {
	mi := &file_genomicsdb_callsets_mapping_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleIDToTileDBIDMap.ProtoReflect.Descriptor instead.
func (*SampleIDToTileDBIDMap) Descriptor() ([]byte, []int) {
	return file_genomicsdb_callsets_mapping_proto_rawDescGZIP(), []int{0}
}

func (x *SampleIDToTileDBIDMap) GetSampleName() string {
	if x != nil && x.SampleName != nil {
		return *x.SampleName
	}
	return ""
}

func (x *SampleIDToTileDBIDMap) GetRowIdx() int64 {
	if x != nil && x.RowIdx != nil {
		return *x.RowIdx
	}
	return 0
}

func (x *SampleIDToTileDBIDMap) GetIdxInFile() int64 {
	if x != nil && x.IdxInFile != nil {
		return *x.IdxInFile
	}
	return 0
}

func (m *SampleIDToTileDBIDMap) GetSource() isSampleIDToTileDBIDMap_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *SampleIDToTileDBIDMap) GetStreamName() string {
	if x, ok := x.GetSource().(*SampleIDToTileDBIDMap_StreamName); ok {
		return x.StreamName
	}
	return ""
}

func (x *SampleIDToTileDBIDMap) GetFilename() string {
	if x, ok := x.GetSource().(*SampleIDToTileDBIDMap_Filename); ok {
		return x.Filename
	}
	return ""
}

type isSampleIDToTileDBIDMap_Source interface {
	isSampleIDToTileDBIDMap_Source()
}

type SampleIDToTileDBIDMap_StreamName struct {
	StreamName string `protobuf:"bytes,4,opt,name=stream_name,json=streamName,oneof"`
}

type SampleIDToTileDBIDMap_Filename struct {
	Filename string `protobuf:"bytes,5,opt,name=filename,oneof"`
}

func (*SampleIDToTileDBIDMap_StreamName) isSampleIDToTileDBIDMap_Source() {}

func (*SampleIDToTileDBIDMap_Filename) isSampleIDToTileDBIDMap_Source() {}

type CallsetMappingPB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Callsets []*SampleIDToTileDBIDMap `protobuf:"bytes,1,rep,name=callsets" json:"callsets,omitempty"`
}

func (x *CallsetMappingPB) Reset() {
	*x = CallsetMappingPB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genomicsdb_callsets_mapping_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallsetMappingPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallsetMappingPB) ProtoMessage() {}

func (x *CallsetMappingPB) ProtoReflect() protoreflect.Message {
	mi := &file_genomicsdb_callsets_mapping_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallsetMappingPB.ProtoReflect.Descriptor instead.
func (*CallsetMappingPB) Descriptor() ([]byte, []int) {
	return file_genomicsdb_callsets_mapping_proto_rawDescGZIP(), []int{1}
}

func (x *CallsetMappingPB) GetCallsets() []*SampleIDToTileDBIDMap {
	if x != nil {
		return x.Callsets
	}
	return nil
}

var File_genomicsdb_callsets_mapping_proto protoreflect.FileDescriptor

var file_genomicsdb_callsets_mapping_proto_rawDesc = []byte{
	0x0a, 0x21, 0x67, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x64, 0x62, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x01, 0x0a, 0x15, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x44,
	0x54, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x44, 0x42, 0x49, 0x44, 0x4d, 0x61, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x77, 0x49, 0x64, 0x78, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x64, 0x78, 0x5f, 0x69,
	0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x69, 0x64,
	0x78, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x50, 0x42, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x65,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x49, 0x44, 0x54, 0x6f, 0x54, 0x69, 0x6c, 0x65, 0x44, 0x42, 0x49, 0x44, 0x4d, 0x61, 0x70,
	0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x65, 0x74, 0x73, 0x42, 0x3d, 0x0a, 0x14, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x64, 0x62, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x42, 0x1a, 0x47, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x44, 0x42, 0x43, 0x61,
	0x6c, 0x6c, 0x73, 0x65, 0x74, 0x73, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x09,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
}

var (
	file_genomicsdb_callsets_mapping_proto_rawDescOnce sync.Once
	file_genomicsdb_callsets_mapping_proto_rawDescData = file_genomicsdb_callsets_mapping_proto_rawDesc
)

func file_genomicsdb_callsets_mapping_proto_rawDescGZIP() []byte {
	file_genomicsdb_callsets_mapping_proto_rawDescOnce.Do(func() {
		file_genomicsdb_callsets_mapping_proto_rawDescData = protoimpl.X.CompressGZIP(file_genomicsdb_callsets_mapping_proto_rawDescData)
	})
	return file_genomicsdb_callsets_mapping_proto_rawDescData
}

var file_genomicsdb_callsets_mapping_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_genomicsdb_callsets_mapping_proto_goTypes = []interface{}{
	(*SampleIDToTileDBIDMap)(nil), // 0: SampleIDToTileDBIDMap
	(*CallsetMappingPB)(nil),      // 1: CallsetMappingPB
}
var file_genomicsdb_callsets_mapping_proto_depIdxs = []int32{
	0, // 0: CallsetMappingPB.callsets:type_name -> SampleIDToTileDBIDMap
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_genomicsdb_callsets_mapping_proto_init() }
func file_genomicsdb_callsets_mapping_proto_init() {
	if File_genomicsdb_callsets_mapping_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_genomicsdb_callsets_mapping_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleIDToTileDBIDMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genomicsdb_callsets_mapping_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallsetMappingPB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_genomicsdb_callsets_mapping_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SampleIDToTileDBIDMap_StreamName)(nil),
		(*SampleIDToTileDBIDMap_Filename)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_genomicsdb_callsets_mapping_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_genomicsdb_callsets_mapping_proto_goTypes,
		DependencyIndexes: file_genomicsdb_callsets_mapping_proto_depIdxs,
		MessageInfos:      file_genomicsdb_callsets_mapping_proto_msgTypes,
	}.Build()
	File_genomicsdb_callsets_mapping_proto = out.File
	file_genomicsdb_callsets_mapping_proto_rawDesc = nil
	file_genomicsdb_callsets_mapping_proto_goTypes = nil
	file_genomicsdb_callsets_mapping_proto_depIdxs = nil
}
